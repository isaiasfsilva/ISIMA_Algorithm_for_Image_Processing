<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="#LANG">
<head>

        
	
  <title>#Projet d'Imagerie</title>
  <meta http-equiv="Content-Type" content="text/html; charset=#CHARSET">

	
  <link rel="stylesheet" href="./style.css" type="text/css">

	
  <meta name="KeyWords" content="ISIMA, TP, imagerie">

	
  <meta name="Description" content="compte rendu de projet de TP">
</head>

  <body>
<h1>
  
  
  Identification de visage à l'aide du contours active </h1>
<h3>FARIA SILVA Isaias, METZKER SOARES Paula, Promo 18 - F4</h3>
<h1 class="titrearticle"> Présentation du sujet </h1>

Dans le cadre du travail final du cours d'Algorithmes pour le Traitement d'Images, on s'intéresse au sujet de Contour Active, une technique de segmentation d'une région de l'image. En conséquence, inspiré de l'article [CHANG, Data], on souhaite mettre en place un programme d'identification de visages selon la coloration de la peau représentée par un modèle de coloration en échelle RGB. Pour être en accord aux pratiques effectuées au cours des classes, on utilise la bibliothèque CImg pour le traitement des images. On vise à mesurer la performance de du logiciel mis en place pour identifier le visage. Par ailleurs, on cible l'identification des limites de la méthode aussi bien que leur performance pour identifier d'autres objets dont la coloration soit la couleur de la peau. Des expérimentations sur des images réelles sont présentées ainsi bien que des images artificielles pour répondre aux problématiques et conjonctures établies.  <br>

<h1 class="titrearticle"> Méthode</h1>

 
<h2 class="soustitrearticle"> Partie théorique</h2>
	  
La détection du visage est une tâche de plus en plus importante pour les applications qui concerne le traitement d'images, en spécial pour le traitement de visage dont cette procédure est la première étape d'une reconnaissance automatique du visage en général. Traditionnellement, le gradient d'une image fournit des contours très précis et est donc une des techniques les plus simples pour la détection d'objets d'une image à partir des contours obtenus. Cependant, le visage humain a une particularité face à des objets en général puisqu'il est décrit pour un modèle unique sous l'échelle RGB. On cherche donc à maximiser la performance et la précision de l'identification du visage face à cette caractéristique particulière. Alors, on se tient à l'identification des bornes de l'objet à partir des frontières entre la région faciale et les autres régions de l'image. Pour cela, on met en place le modèle déformable aussi connu comme modèle de contour actif. 

Un contour actif est une courbe qui évolue à partir de sa forme initiale vers une forme la plus proche du contour de l'objet d'intérêt sous l'action de la force d'énergie sur cette courbe. Le modèle de contour active mis en place et appelé "Snakes" cherche à minimiser la fonction d'énergie dans la courbe modélisant l'objet d'intérêt. Ce modèle a été introduit par [KASS,1988]. On reprend les notations présentées par [CHANG, Data], puisque c'est l'article de référence pour l'implémentation proposée. On définit donc une image paramétrée par I(x,y) une valeur réelle à partir des coordonnées cartésiennes bidimensionnelles. La courbe de contour sera donc paramétrée comme C(p) = {x(p), y(p)}, où p est un paramètre arbitraire. À partir de l'équation d'énergie proposée par [KASS,1988], on peut écrire l'énergie du contour active comme: 

<br>

<a href="https://www.codecogs.com/eqnedit.php?latex=E&space;=&space;\alpha&space;\int_{0}^{1}&space;|C'(p)|^2&space;dp&space;&plus;&space;\beta&space;\int_{0}^{1}&space;|C''(p)|^2&space;dp-&space;\lambda&space;\int_{0}^{1}&space;|\bigtriangledown&space;I(x(p),y(p))&space;|^2&space;dp" target="_blank"><img src="https://latex.codecogs.com/gif.latex?E&space;=&space;\alpha&space;\int_{0}^{1}&space;|C'(p)|^2&space;dp&space;&plus;&space;\beta&space;\int_{0}^{1}&space;|C''(p)|^2&space;dp-&space;\lambda&space;\int_{0}^{1}&space;|\bigtriangledown&space;I(x(p),y(p))&space;|^2&space;dp" title="E = \alpha \int_{0}^{1} |C'(p)|^2 dp + \beta \int_{0}^{1} |C''(p)|^2 dp- \lambda \int_{0}^{1} |\bigtriangledown I(x(p),y(p)) |^2 dp" /></a>

<br>
où <a href="https://www.codecogs.com/eqnedit.php?latex=\alpha&space;,\beta&space;et&space;\lambda" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\alpha&space;,\beta&space;et&space;\lambda" title="\alpha ,\beta et \lambda" /></a> sont des constantes positives. Les deux premières constantes une contrainte interne au contour. Ce sont des termes de régularisation du contour qui déterminent son élasticité et sa rigidité. Alors, la minimisation de ces termes rend le contour plus précis et propre. D'autre part, la dernière constante est le terme de liaison aux données. Elle dirige le contour vers les zones de plus forts gradients de l'image et donc les régions plus probables d'être des contours. Sa minimisation est donc un détecteur de frontières. En effet, l'énergie est représenté implicitement en ligne de niveaux puisque la courbe évolue au cours des itérations. On dit que <a href="https://www.codecogs.com/eqnedit.php?latex=\phi" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\phi" title="\phi" /></a> est la fonction de ligne de niveaux tel que <a href="https://www.codecogs.com/eqnedit.php?latex=\phi&space;(x,y):&space;R^2&space;\rightarrow&space;R" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\phi&space;(x,y):&space;R^2&space;\rightarrow&space;R" title="\phi (x,y): R^2 \rightarrow R" /></a> représente la courbe C selon le référentiel suivant: <a href="https://www.codecogs.com/eqnedit.php?latex=C&space;=&space;{(x,y):&space;\phi&space;(x,y)&space;=&space;0}" target="_blank"><img src="https://latex.codecogs.com/gif.latex?C&space;=&space;{(x,y):&space;\phi&space;(x,y)&space;=&space;0}" title="C = {(x,y): \phi (x,y) = 0}" /></a> de façon que la courbe est interprétée dans la direction normale à partir d'une vitesse imposée par la force d'énergie. Il revient donc à résoudre l'équation différentielle suivante:
<br>
<a href="https://www.codecogs.com/eqnedit.php?latex=\frac{\partial&space;\phi}{\partial&space;t}&space;=&space;|\bigtriangledown&space;\phi|F,&space;\phi(0,x,y)&space;=&space;\phi&space;_0&space;(x,y)" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\frac{\partial&space;\phi}{\partial&space;t}&space;=&space;|\bigtriangledown&space;\phi|F,&space;\phi(0,x,y)&space;=&space;\phi&space;_0&space;(x,y)" title="\frac{\partial \phi}{\partial t} = |\bigtriangledown \phi|F, \phi(0,x,y) = \phi _0 (x,y)" /></a>
<br>

où <a href="https://www.codecogs.com/eqnedit.php?latex=\phi&space;_0&space;(x,y)" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\phi&space;_0&space;(x,y)" title="\phi _0 (x,y)" /></a> définit le contour initial.

Selon [CHANG, Data] cette formulation permet d'implémenter l'évolution de la courbe dans les coordonnées bidimensionnelles initiales. De plus, la convergence de la ligne de niveaux est obtenue à partir des contraintes dérivées de l'image. On identifie donc les frontières de contour par le contour active. À partir de ce modèle, la ligne de niveaux sous-contrainte du gradient est modélisée comme:
<br>
<a href="https://www.codecogs.com/eqnedit.php?latex=\frac{\partial&space;\phi}{\partial&space;t}&space;=&space;g(|\bigtriangledown&space;I|)|\bigtriangledown&space;\phi|&space;F" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\frac{\partial&space;\phi}{\partial&space;t}&space;=&space;g(|\bigtriangledown&space;I|)|\bigtriangledown&space;\phi|&space;F" title="\frac{\partial \phi}{\partial t} = g(|\bigtriangledown I|)|\bigtriangledown \phi| F" /></a>
<br>

À partir de cette technique on s'inspire de l'article [CHANG, Data] afin de mettre en place le modèle dont la ligne de niveaux sera en fonction de la coloration de la peau. Normalement, en espace RGB, la coloration de la peau humaine admettre un modèle particulier et par conséquent fournit un outil fiable de détection de visages, quand la luminance n'est pas prise en compte. Pour supprimer la luminance de la représentation RGB, on doit diviser toutes les composantes de couleur des pixels (R,G,B) par l'intensité. Ce nouveau espace de couleur est appelée de Coloration Chromatique et propose la neutralisation de l'intensité selon des vecteur de couleur en deux composantes (r,g). 


<br>La coloration du visage est donc clustérisée dans la région de la coloration chromatique. Elle sera représentée par une approximation de la distribution gaussienne en 2D <a href="https://www.codecogs.com/eqnedit.php?latex=N(m,\sum&space;))" target="_blank"><img src="https://latex.codecogs.com/gif.latex?N(m,\sum&space;))" title="N(m,\sum )" /></a> où <a href="https://www.codecogs.com/eqnedit.php?latex=m&space;=&space;(\bar&space;r&space;,\bar&space;g)" target="_blank"><img src="https://latex.codecogs.com/gif.latex?m&space;=&space;(\bar&space;r&space;,\bar&space;g)" title="m = (\bar r ,\bar g)" /></a>. <br>

Les nouvelles composantes de travail selon la coloration seront: <br>

<a href="https://www.codecogs.com/eqnedit.php?latex=\small&space;r&space;=&space;\frac{R}{R&plus;G&plus;B},&space;g&space;=&space;\frac{G}{R&plus;G&plus;B},&space;\bar&space;r&space;=&space;\frac{1}{S}\sum_{i=1}^S&space;r_i,&space;\bar&space;g&space;=&space;\frac{1}{S}\sum_{i=1}^S&space;g_i,&space;\sum&space;=&space;\begin{bmatrix}&space;\sigma&space;_r^2&space;&&space;\rho&space;_{X,Y}\sigma&space;_g&space;\sigma&space;_r&space;\\&space;\rho&space;_{X,Y}\sigma&space;_r&space;\sigma&space;_g&space;&&space;\sigma&space;_g^2&space;\end{bmatrix}" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\small&space;r&space;=&space;\frac{R}{R&plus;G&plus;B},&space;g&space;=&space;\frac{G}{R&plus;G&plus;B},&space;\bar&space;r&space;=&space;\frac{1}{S}\sum_{i=1}^S&space;r_i,&space;\bar&space;g&space;=&space;\frac{1}{S}\sum_{i=1}^S&space;g_i,&space;\sum&space;=&space;\begin{bmatrix}&space;\sigma&space;_r^2&space;&&space;\rho&space;_{X,Y}\sigma&space;_g&space;\sigma&space;_r&space;\\&space;\rho&space;_{X,Y}\sigma&space;_r&space;\sigma&space;_g&space;&&space;\sigma&space;_g^2&space;\end{bmatrix}" title="\small r = \frac{R}{R+G+B}, g = \frac{G}{R+G+B}, \bar r = \frac{1}{S}\sum_{i=1}^S r_i, \bar g = \frac{1}{S}\sum_{i=1}^S g_i, \sum = \begin{bmatrix} \sigma _r^2 & \rho _{X,Y}\sigma _g \sigma _r \\ \rho _{X,Y}\sigma _r \sigma _g & \sigma _g^2 \end{bmatrix}" /></a>
La fonction d'énergie selon des paramètres proposés pour le modèle de contour active est donnée sur la forme:
<br> 
<a href="https://www.codecogs.com/eqnedit.php?latex=\small&space;E(\bar&space;r,&space;\bar&space;g,&space;c,&space;C)&space;=&space;\mu&space;\cdot&space;Longueur(C)&plus;v&space;\cdot&space;Area(interieur(C))&space;&plus;&space;\lambda&space;_1&space;\int&space;_{interieur(C)}&space;(|\bar&space;r&space;-r(x,y)|^2&space;&plus;&space;|\bar&space;g&space;-g(x,y)|^2)dxdy&space;&plus;&space;\lambda&space;_2&space;\int&space;_{exterieur(C)}&space;|Ix(x,y)-c|^2&space;dxdy" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\small&space;E(\bar&space;r,&space;\bar&space;g,&space;c,&space;C)&space;=&space;\mu&space;\cdot&space;Longueur(C)&plus;v&space;\cdot&space;Area(interieur(C))&space;&plus;&space;\lambda&space;_1&space;\int&space;_{interieur(C)}&space;(|\bar&space;r&space;-r(x,y)|^2&space;&plus;&space;|\bar&space;g&space;-g(x,y)|^2)dxdy&space;&plus;&space;\lambda&space;_2&space;\int&space;_{exterieur(C)}&space;|Ix(x,y)-c|^2&space;dxdy" title="\small E(\bar r, \bar g, c, C) = \mu \cdot Longueur(C)+v \cdot Area(interieur(C)) + \lambda _1 \int _{interieur(C)} (|\bar r -r(x,y)|^2 + |\bar g -g(x,y)|^2)dxdy + \lambda _2 \int _{exterieur(C)} |Ix(x,y)-c|^2 dxdy" /></a> (4)
<br>
où <a href="https://www.codecogs.com/eqnedit.php?latex=\small&space;\mu,&space;\nu,&space;\lambda_1,&space;\lambda_2" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\small&space;\mu,&space;\nu,&space;\lambda_1,&space;\lambda_2" title="\small \mu, \nu, \lambda_1, \lambda_2" /></a> sont des constantes, c est la moyenne de I à l'extérieur de C, et efin intérieur(C) et extérieur(C) sont les régions à l'intérieur et à l'extérieur du contour, respectivement. <br>

On note donc le contour représenté par la ligne de niveau 0 selon la fonction de ligne de niveaux <a href="https://www.codecogs.com/eqnedit.php?latex=\small&space;\phi" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\small&space;\phi" title="\small \phi" /></a> qui respecte à la distribution suivante: <br>

<a href="https://www.codecogs.com/eqnedit.php?latex=\small&space;\left\{\begin{matrix}&space;C&space;=&space;{(x,y):\phi(x,y)=0}\\&space;interieur(C)&space;={(x,y):\phi(x,y)&space;>&space;0}&space;\\&space;exterieur(C)&space;={(x,y):\phi(x,y)&space;<&space;0}&space;\end{matrix}\right." target="_blank"><img src="https://latex.codecogs.com/gif.latex?\small&space;\left\{\begin{matrix}&space;C&space;=&space;{(x,y):\phi(x,y)=0}\\&space;interieur(C)&space;={(x,y):\phi(x,y)&space;>&space;0}&space;\\&space;exterieur(C)&space;={(x,y):\phi(x,y)&space;<&space;0}&space;\end{matrix}\right." title="\small \left\{\begin{matrix} C = {(x,y):\phi(x,y)=0}\\ interieur(C) ={(x,y):\phi(x,y) > 0} \\ exterieur(C) ={(x,y):\phi(x,y) < 0} \end{matrix}\right." /></a> <br>

L'énergie peut donc être représentée comme une formulation donc le contour peut être remplacé par la ligne de niveaux <a href="https://www.codecogs.com/eqnedit.php?latex=\small&space;\phi" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\small&space;\phi" title="\small \phi" /></a>. Si on remplace C par <a href="https://www.codecogs.com/eqnedit.php?latex=\small&space;\phi" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\small&space;\phi" title="\small \phi" /></a> en (4) et en suite on calcule l’équation d'Euler-Lagrange, on obtient donc: <br>

<a href="https://www.codecogs.com/eqnedit.php?latex=\frac{\partial&space;\phi}{\partial&space;t}&space;\equiv&space;\mu&space;\cdot&space;div(\frac{\bigtriangledown&space;\phi}{|\bigtriangledown&space;\phi|})&space;-&space;\nu&space;-&space;\lambda&space;_1{(\bar&space;r&space;-&space;r)^2&space;&plus;&space;(\bar&space;g&space;-&space;g)^2}&space;&plus;&space;\lambda&space;_2&space;(I-c)^2" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\frac{\partial&space;\phi}{\partial&space;t}&space;\equiv&space;\mu&space;\cdot&space;div(\frac{\bigtriangledown&space;\phi}{|\bigtriangledown&space;\phi|})&space;-&space;\nu&space;-&space;\lambda&space;_1{(\bar&space;r&space;-&space;r)^2&space;&plus;&space;(\bar&space;g&space;-&space;g)^2}&space;&plus;&space;\lambda&space;_2&space;(I-c)^2" title="\frac{\partial \phi}{\partial t} \equiv \mu \cdot div(\frac{\bigtriangledown \phi}{|\bigtriangledown \phi|}) - \nu - \lambda _1{(\bar r - r)^2 + (\bar g - g)^2} + \lambda _2 (I-c)^2" /></a> <br>

où <a href="https://www.codecogs.com/eqnedit.php?latex=div(\bigtriangledown&space;\phi&space;/|\bigtriangledown&space;\phi|)" target="_blank"><img src="https://latex.codecogs.com/gif.latex?div(\bigtriangledown&space;\phi&space;/|\bigtriangledown&space;\phi|)" title="div(\bigtriangledown \phi /|\bigtriangledown \phi|)" /></a> est la courbure de la ligne de niveaux. À partir du voisinage de la ligne de niveaux, on note la courbure comme: <br>
<a href="https://www.codecogs.com/eqnedit.php?latex=div(\frac{\bigtriangledown&space;\phi}{|\bigtriangledown&space;\phi|})&space;=&space;\frac{\phi_{xx}\phi_y^2&space;-&space;2\phi_x\phi_y\phi_{xy}&plus;&space;\phi_{yy}\phi_x^2}{(\phi_x^2&space;&plus;&space;\phi_y^2)^{3/2}}" target="_blank"><img src="https://latex.codecogs.com/gif.latex?div(\frac{\bigtriangledown&space;\phi}{|\bigtriangledown&space;\phi|})&space;=&space;\frac{\phi_{xx}\phi_y^2&space;-&space;2\phi_x\phi_y\phi_{xy}&plus;&space;\phi_{yy}\phi_x^2}{(\phi_x^2&space;&plus;&space;\phi_y^2)^{3/2}}" title="div(\frac{\bigtriangledown \phi}{|\bigtriangledown \phi|}) = \frac{\phi_{xx}\phi_y^2 - 2\phi_x\phi_y\phi_{xy}+ \phi_{yy}\phi_x^2}{(\phi_x^2 + \phi_y^2)^{3/2}}" /></a>. <br>








<!-- Eu esqueci a palavra que o prof usa para dizer que o contorno fica mais certinho -->


<!-- Présentation de la méthode utilisée et référence aux travaux connexes (cf. biblio article)<br> -->

<br>

<h2 class="soustitrearticle"> Implémentation</h2>
<p>La mise en oeuvre de ce travail a &eacute;t&eacute; fait dans la machine <strong>Berzet&nbsp;</strong>en utilisant le biblioth&egrave;que <strong>CImg&nbsp;</strong>qu&#39;a &eacute;t&eacute; propos&eacute;e par l&#39;enseignant &nbsp;pendant le cours d&#39;Algorithms for Image Processing dans le cadre d&#39;Ing&eacute;nieur Informatique de l&#39;ISIMA. &nbsp;Ce projet est &eacute;galement disponible dans le GitHub &nbsp;(<a href="https://goo.gl/qTDxar" rel="noopener noreferrer" target="_blank">https://goo.gl/qTDxar</a> ).</p>
<hr>

<ol>
  <li><strong><u>L&#39;structure du projet:</u></strong>

    <ul>
      <li><span style="color: rgb(184, 49, 47);"><strong>/ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(184, 49, 47);"><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></span>&nbsp; &nbsp; &nbsp;&nbsp;</strong>&nbsp;</span><span style="color: rgb(124, 112, 107);">//Dossier racine du projet</span>

        <ul>
          <li><span style="color: rgb(184, 49, 47);"><strong>Images/ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color: rgb(184, 49, 47);"><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></span>&nbsp; &nbsp; &nbsp; &nbsp;</strong><span style="color: rgb(124, 112, 107);">//Dossier avec les images</span></span>

            <ul>
              <li><span style="color: rgb(184, 49, 47);"><strong>testes/ <span style="color: rgb(184, 49, 47);"><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></span>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</strong>&nbsp; <span style="color: rgb(124, 112, 107);">//Images pour faire les tests</span></span>
              </li>
            </ul>
          </li>
          <li><strong><span style="color: rgb(184, 49, 47);">output/ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color: rgb(184, 49, 47);"><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></span>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span>&nbsp;</strong><span style="color: rgb(184, 49, 47);">&nbsp;<span style="color: rgb(124, 112, 107);">//Dossier avec les r&eacute;sultats que nous avons obtenu</span></span>
          </li>
          <li><span style="color: rgb(184, 49, 47);"><strong>Rapport/ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong> <span style="color: rgb(124, 112, 107);">//Dossier que contient ce pr&eacute;sent rapport</span></span>

            <ul>
              <li><span style="color: rgb(41, 105, 176);">template.html &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(124, 112, 107);">//Rapport (Il faut l&#39;ouvrir avec un navigateur web)</span></span>
              </li>
            </ul>
          </li>
          <li><span style="color: rgb(41, 105, 176);">main.cpp<span style="color: rgb(184, 49, 47);"><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</strong> <span style="color: rgb(41, 105, 176);"><span style="color: rgb(124, 112, 107);">//Fichier que contient le code du projet</span></span>&nbsp;</span>&nbsp;</span>
          </li>
          <li><span style="color: rgb(41, 105, 176);">Makefile &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong><u>Compilation</u></strong>

    <ul>
      <li>Pour compiler ce projet il faut seulement ex&eacute;cuter le commande &quot;make&quot; dans le dossier racine du projet. Nous utilisons d&#39;abord la machine berzet.</li>
    </ul>
  </li>
  <li><strong><u>Ex&eacute;cution</u></strong>

    <ul>
      <li>Pour ex&eacute;cuter ce projet il faut informer l&#39;image dans le premier param&egrave;tre comme dans l&#39;exemple suivant:

        <ul>
          <li><strong><span style="color: rgb(147, 101, 184);">$</span> ./finalTP <span style="color: rgb(184, 49, 47);">NOME_IMAGE</span></strong></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><span style="color: rgb(0, 0, 0);"><u><strong>D&eacute;finitions de base</strong></u></span>

    <ul>
      <li><span style="color: rgb(184, 49, 47);"><span style="color: rgb(0, 0, 0);">Dans cet projet nous avons fait quelques d&eacute;finitions. La premi&egrave;re est li&eacute;e &agrave; le contour de d&eacute;but. Nous utilisons un circle de rayon &eacute;gale &agrave; taille de l&#39;image divis&eacute;e par 2 et avec le point d&#39;origine dans le centre de l&#39;Image.</span></span>
      </li>
      <li>Nous avons chang&eacute; l&#39;initialisation du LevelSet pour &ecirc;tre l&#39;inverse de l&#39;initialization que nous avons fait dans le cours. Cette modification &eacute;tait n&eacute;cessaire parce que toutes les d&eacute;finitions que nous avons utilis&eacute;e sont l&#39;inverse des que sont pr&eacute;sent&eacute;es dans l&#39;artice.</li>
    </ul>
  </li>
  <li><strong><u>Codage</u></strong>

    <ol>
      <li>D&#39;abord les fonctions <span style="color: rgb(85, 57, 130);"><strong>ExtractContour()</strong></span><span style="color: rgb(0, 0, 0);">,&nbsp;</span><span style="color: rgb(85, 57, 130);"><strong>DrawContour()&nbsp;</strong></span><span style="color: rgb(0, 0, 0);">et</span><span style="color: rgb(85, 57, 130);"><strong>&nbsp;InitLevelSet()&nbsp;</strong></span><span style="color: rgb(0, 0, 0);">sont les m&ecirc;mes que nous avons utilis&eacute; dans le projet. Le travail principal &eacute;tait modifier la fonction de propagation </span><span style="color: rgb(85, 57, 130);"><strong>Propagate()</strong></span><span style="color: rgb(0, 0, 0);">. Dans cette fonction nous d&eacute;finissions quelques parametres pour le mod&egrave;le, nous calculons la constante C d&eacute;finie ci-dessous et nous r&eacute;alisons la propagation du LevelSet.</span></li>
    </ol>
  </li>
</ol>
<hr>

<p>&nbsp;</p>

<p>
  <br>
</p>


<h1 class="titrearticle"> Résultats</h1>

<h2 class="soustitrearticle"> Validation sur données de synthèse</h2>
<!--
Vous devez créer des données de synthèse pour évaluer votre méthode
-->
<br>

<h2 class="soustitrearticle"> Données réelles</h2>
<!--
Une fois la méthode évaluée, vous appliquerez votre méthode sur des images réelles
-->
<br>

<h1 class="titrearticle"> Discussion</h1>
<!--
Commentez vos résultats (d'un point de vue qualitatif <span style="font-weight: bold;">ET</span> quantitatif)
-->


Limites : <br>

Cette approche est limitée par plusieurs inconvénients.

 * La reconnaissance requiert la bonne initialization des paramètres aussi bien que le bon positionnement du contour initial. C'est-àire que l'énergie est dépendante de la paramétrisation du contour.
<br>
* La convergence est obtenue seulement par des frontières non-concaves de l'objet d'intêrét quand la contrainte de régularité est très significante par ce modèle. Alors le résultat sera soit la divergence du calcul ou une très élévée perturbation des résultats.
<br>
* La contrainte de rigidité entraîne des perturbations du calcul.


<h1 class="titrearticle"> Références</h1>

[CHANG, Data] Jae-Sik Chang1, Mu-Youl Lee1 , Chae-Hyun Moon1, Hye-Sun Park1, Kyung-Mi Lee2, Hang-Joon Kim. "Face detection using active contours"  <br>

[KASS,1988] M. Michael Kass, Andrew Witkin, Demetri Terzopoulos. "Snakes : Active contour models". International Journal of Computer Vision, 1 :321?332, 1988 <br>

[GASTAUD, 2005] Muriel Gastaud. "Modèles de contours actifs pour la segmentation d’images et de vidéos". Automatique
/ Robotique. Université Nice Sophia Antipolis, 2005. <br>


</body>
</html>
